


create  TABLE IF NOT EXISTS film (
    film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(200) NOT NULL,
    release_date DATE NOT NULL,
    duration INT NOT NULL,
    mpa_id INT,
    rate FLOAT,
    CONSTRAINT fk_mpa_id FOREIGN KEY (mpa_id) REFERENCES mpa
);

create  TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(100) NOT NULL,
    login VARCHAR(20) NOT NULL,
    name VARCHAR(50) NOT NULL,
    birthday DATE NOT NULL
);

create  TABLE IF NOT EXISTS genre (
    genre_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(20) NOT NULL
);

create  TABLE IF NOT EXISTS film_genre (
    film_id BIGINT,
    genre_id INT,
    CONSTRAINT fk_genre_film_id FOREIGN KEY (film_id) REFERENCES film ON delete CASCADE,
    CONSTRAINT fk_genre_id FOREIGN KEY (genre_id) REFERENCES genre
);

create  TABLE IF NOT EXISTS user_friends (
    user_id BIGINT,
    friend_id BIGINT,
    status VARCHAR(20),
    CONSTRAINT fk_friends_user_id FOREIGN KEY (user_id) REFERENCES users ON delete CASCADE,
    CONSTRAINT fk_friends_friend_id FOREIGN KEY (friend_id) REFERENCES users ON delete CASCADE
);

create  TABLE IF NOT EXISTS  film_rates (
    film_id BIGINT,
    user_id BIGINT,
    film_rate INTEGER CHECK(film_rate BETWEEN 1 AND 10),
    CONSTRAINT fk_likes_film_id  FOREIGN KEY (film_id) REFERENCES film ON delete CASCADE,
    CONSTRAINT fk_likes_user_id FOREIGN KEY (user_id) REFERENCES users ON delete CASCADE
);

create TABLE  IF NOT EXISTS review(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content VARCHAR,
    is_positive BOOLEAN,
    user_id BIGINT REFERENCES users(user_id),
    film_id BIGINT REFERENCES film(film_id)
);

create TABLE IF NOT EXISTS review_likes (
    review_id BIGINT REFERENCES review(id) ON delete CASCADE,
    user_id BIGINT REFERENCES users(user_id),
    is_like BOOLEAN
);

create  TABLE IF NOT EXISTS director (
    director_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    director_name VARCHAR(50)
);

create TABLE IF NOT EXISTS director_film (
    director_id BIGINT,
    film_id BIGINT,
    CONSTRAINT fk_director_director_id FOREIGN KEY (director_id) REFERENCES director ON delete CASCADE,
    CONSTRAINT fk_director_film_id FOREIGN KEY (film_id) REFERENCES film ON delete CASCADE
);

create TABLE IF NOT EXISTS event (
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT REFERENCES users(user_id) ON delete CASCADE,
    entity_id BIGINT,
    time_stamp BIGINT,
    event_type VARCHAR(6),
    operation VARCHAR(6),
    rate INTEGER
)

create TABLE IF NOT EXISTS mpa (
    mpa_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name VARCHAR(20) NOT NULL
);